@model SoftwareContabilidade.Models.Fornecedor

@{
    ViewData["Title"] = "Fornecedor";
}

<h4>Cadastrar Fornecedor</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="nome" class="control-label"></label>
                <input asp-for="nome" class="form-control" />
                <span asp-validation-for="nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cnpj, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.cnpj, new { htmlAttributes = new { @class = "form-control", maxlength = "18" } })
                @Html.ValidationMessageFor(model => model.cnpj, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="cidade" class="control-label"></label>
                <input asp-for="cidade" class="form-control" />
                <span asp-validation-for="cidade" class="text-danger"></span>
            </div>
            <br>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    function formatCnpj(cnpj) {
        cnpj = cnpj.replace(/\D/g, '');
        return cnpj.replace(/(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})/, '$1.$2.$3/$4-$5');
    }

    document.getElementById('cnpj').addEventListener('input', function (event) {
        var input = event.target;
        var formatted = formatCnpj(input.value);
        input.value = formatted;
    });

</script>
