// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareContabilidade.Models;

#nullable disable

namespace SoftwareContabilidade.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240612012504_Criacao-Inicial")]
    partial class CriacaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoftwareContabilidade.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cidade");

                    b.Property<string>("cnpj")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj");

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Fornecedorid")
                        .HasColumnType("int");

                    b.Property<int>("Mercadoriaid")
                        .HasColumnType("int");

                    b.Property<float>("precoCusto")
                        .HasColumnType("real")
                        .HasColumnName("precoCusto");

                    b.Property<int>("quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.HasKey("id");

                    b.HasIndex("Fornecedorid");

                    b.HasIndex("Mercadoriaid");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Fornecedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cidade");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Icsm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo");

                    b.Property<float>("valor")
                        .HasColumnType("real")
                        .HasColumnName("valor");

                    b.HasKey("id");

                    b.ToTable("Icms");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Mercadoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<float>("precoCusto")
                        .HasColumnType("real")
                        .HasColumnName("precoCusto");

                    b.Property<float>("precoVenda")
                        .HasColumnType("real")
                        .HasColumnName("precoVenda");

                    b.Property<int>("qtdEstoque")
                        .HasColumnType("int")
                        .HasColumnName("qtdEstoque");

                    b.HasKey("id");

                    b.ToTable("Mercadoria");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Patrimonio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Fornecedorid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<float>("preco")
                        .HasColumnType("real")
                        .HasColumnName("preco");

                    b.HasKey("id");

                    b.HasIndex("Fornecedorid");

                    b.ToTable("Patrimonio");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Venda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Clienteid")
                        .HasColumnType("int");

                    b.Property<int>("Mercadoriaid")
                        .HasColumnType("int");

                    b.Property<float>("precoVenda")
                        .HasColumnType("real")
                        .HasColumnName("precoVenda");

                    b.Property<int>("quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.HasKey("id");

                    b.HasIndex("Clienteid");

                    b.HasIndex("Mercadoriaid");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Compra", b =>
                {
                    b.HasOne("SoftwareContabilidade.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("Fornecedorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareContabilidade.Models.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("Mercadoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Patrimonio", b =>
                {
                    b.HasOne("SoftwareContabilidade.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("Fornecedorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SoftwareContabilidade.Models.Venda", b =>
                {
                    b.HasOne("SoftwareContabilidade.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Clienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareContabilidade.Models.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("Mercadoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mercadoria");
                });
#pragma warning restore 612, 618
        }
    }
}
